[paths]
train = ./train_ner-a.spacy
dev = ./dev_ner-a.spacy
output = ./output_wangchanberta

[system]
seed = 42
gpu_allocator = "pytorch"

[nlp]
lang = "th"
pipeline = ["transformer", "ner"]
batch_size = 128

[components]

[components.transformer]
factory = "transformer"

[components.transformer.model]
@architectures = "spacy-transformers.TransformerModel.v3"
name = "airesearch/wangchanberta-base-att-spm-uncased"
tokenizer_config = {"use_fast": true}
transformer_config = {"output_hidden_states": false}

[components.transformer.model.get_spans]
@span_getters = "spacy-transformers.strided_spans.v1"
window = 128
stride = 96

[components.ner]
factory = "ner"

[components.ner.model]
@architectures = "spacy.TransitionBasedParser.v2"
state_type = "ner"
extra_labels = false
hidden_width = 64
maxout_pieces = 2
use_upper = false
nO = null

[components.ner.model.tok2vec]
@architectures = "spacy-transformers.TransformerListener.v1"
grad_factor = 1.0

[components.ner.model.tok2vec.pooling]
@layers = "spacy.mean_pooler.v1"

[training]
@training = "spacy.TrainingConfig.v1"
dropout = 0.1
patience = 2000
max_epochs = 20
eval_frequency = 200
accumulate_gradient = 1
seed = 42
gpu_allocator = "pytorch"

[training.optimizer]
@optimizers = "Adam.v1"
beta1 = 0.9
beta2 = 0.999
L2_is_weight_decay = true
L2 = 0.01
learn_rate = 0.00005

[training.batcher]
@batchers = "spacy.batch_by_words.v1"
discard_oversize = true
tolerance = 0.2
size = 2000

[training.logger]
@loggers = "spacy.ConsoleLogger.v1"

[initialize]
vectors = null

[corpora]

[corpora.train]
@readers = "spacy.Corpus.v1"
path = ${paths.train}

[corpora.dev]
@readers = "spacy.Corpus.v1"
path = ${paths.dev}