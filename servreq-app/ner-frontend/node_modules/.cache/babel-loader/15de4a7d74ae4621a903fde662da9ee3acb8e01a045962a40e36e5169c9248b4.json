{"ast":null,"code":"var _jsxFileName = \"D:\\\\Research\\\\IoTs-NER_Model\\\\NER_Model\\\\Implementation\\\\servreq-app-b\\\\ner-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [entities, setEntities] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    alert(inputText);\n    // const response = await fetch(\"http://localhost:8000/ner\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify({ text: inputText }),\n    // });\n    // const data = await response.json();\n    // setEntities(data.entities);\n  };\n  const highlightText = () => {\n    if (entities.length === 0) return inputText;\n\n    // Tokenize original text (simple split by space for demo)\n    const words = inputText.split(\" \");\n    return words.map((word, index) => {\n      const entity = entities.find(ent => ent.token === word);\n      if (entity) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `entity ${entity.label}`,\n          children: word + \" \"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this);\n      } else {\n        return word + \" \";\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Named Entity Recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"4\",\n        cols: \"50\",\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        placeholder: \"Enter text here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Entities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: highlightText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5p9Bo8Xj6SA8y/UyP7aA4DT+lFI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","inputText","setInputText","entities","setEntities","handleSubmit","e","preventDefault","alert","highlightText","length","words","split","map","word","index","entity","find","ent","token","className","label","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","rows","cols","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["D:/Research/IoTs-NER_Model/NER_Model/Implementation/servreq-app-b/ner-frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [entities, setEntities] = useState([]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    alert(inputText);\n    // const response = await fetch(\"http://localhost:8000/ner\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify({ text: inputText }),\n    // });\n    // const data = await response.json();\n    // setEntities(data.entities);\n  };\n\n  const highlightText = () => {\n    if (entities.length === 0) return inputText;\n\n    // Tokenize original text (simple split by space for demo)\n    const words = inputText.split(\" \");\n    return words.map((word, index) => {\n      const entity = entities.find((ent) => ent.token === word);\n      if (entity) {\n        return (\n          <span key={index} className={`entity ${entity.label}`}>\n            {word + \" \"}\n          </span>\n        );\n      } else {\n        return word + \" \";\n      }\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Named Entity Recognition</h1>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          rows=\"4\"\n          cols=\"50\"\n          value={inputText}\n          onChange={(e) => setInputText(e.target.value)}\n          placeholder=\"Enter text here...\"\n        />\n        <br />\n        <button type=\"submit\">Analyze</button>\n      </form>\n      <h2>Entities</h2>\n      <div className=\"result\">{highlightText()}</div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}