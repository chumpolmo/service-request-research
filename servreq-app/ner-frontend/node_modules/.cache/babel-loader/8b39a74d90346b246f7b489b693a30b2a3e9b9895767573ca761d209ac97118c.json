{"ast":null,"code":"var _jsxFileName = \"D:\\\\Research\\\\IoTs-NER_Model\\\\NER_Model\\\\Implementation\\\\servreq-app-b\\\\ner-frontend\\\\src\\\\NERText.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NERText = ({\n  data\n}) => {\n  // ฟังก์ชันสำหรับรวม token ย่อย (##) และเลือก label ที่มี confidence สูงสุด\n  const mergeTokens = tokens => {\n    const merged = [];\n    let currentToken = \"\";\n    let currentLabel = \"\";\n    let currentConfidence = 0;\n    tokens.forEach((t, index) => {\n      // หา label ที่มี confidence สูงสุดใน all_probs\n      const probs = t.all_probs;\n      const bestLabel = Object.keys(probs).reduce((a, b) => probs[a] > probs[b] ? a : b);\n      const bestConfidence = probs[bestLabel];\n      if (t.token.startsWith(\"##\")) {\n        currentToken += t.token.replace(\"##\", \"\");\n      } else {\n        // ถ้ามี token ก่อนหน้า ให้ push\n        if (currentToken && currentLabel !== \"O\") {\n          merged.push({\n            token: currentToken,\n            label: currentLabel,\n            confidence: currentConfidence\n          });\n        }\n        // เริ่ม token ใหม่\n        currentToken = t.token;\n        currentLabel = bestLabel;\n        currentConfidence = bestConfidence;\n      }\n\n      // token สุดท้าย\n      if (index === tokens.length - 1) {\n        if (currentToken && currentLabel !== \"O\") {\n          merged.push({\n            token: currentToken,\n            label: currentLabel,\n            confidence: currentConfidence\n          });\n        }\n      }\n    });\n    return merged;\n  };\n  const mergedTokens = mergeTokens(data);\n  const textWithEntities = mergedTokens.map((t, idx) => {\n    return `${t.token} [${t.label}] `;\n  }).join(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0E02\\u0E49\\u0E2D\\u0E04\\u0E27\\u0E32\\u0E21\\u0E1E\\u0E23\\u0E49\\u0E2D\\u0E21 Entities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), mergedTokens.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Entities Detected:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mergedTokens.map((t, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `entity ${t.label}`,\n          children: [t.token, \" - \", t.label, \" (Confidence: \", t.confidence.toFixed(2), \")\"]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_c = NERText;\nexport default NERText;\nvar _c;\n$RefreshReg$(_c, \"NERText\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","NERText","data","mergeTokens","tokens","merged","currentToken","currentLabel","currentConfidence","forEach","t","index","probs","all_probs","bestLabel","Object","keys","reduce","a","b","bestConfidence","token","startsWith","replace","push","label","confidence","length","mergedTokens","textWithEntities","map","idx","join","children","fileName","_jsxFileName","lineNumber","columnNumber","className","toFixed","_c","$RefreshReg$"],"sources":["D:/Research/IoTs-NER_Model/NER_Model/Implementation/servreq-app-b/ner-frontend/src/NERText.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst NERText = ({ data }) => {\r\n  // ฟังก์ชันสำหรับรวม token ย่อย (##) และเลือก label ที่มี confidence สูงสุด\r\n  const mergeTokens = (tokens) => {\r\n    const merged = [];\r\n    let currentToken = \"\";\r\n    let currentLabel = \"\";\r\n    let currentConfidence = 0;\r\n\r\n    tokens.forEach((t, index) => {\r\n      // หา label ที่มี confidence สูงสุดใน all_probs\r\n      const probs = t.all_probs;\r\n      const bestLabel = Object.keys(probs).reduce((a, b) =>\r\n        probs[a] > probs[b] ? a : b\r\n      );\r\n      const bestConfidence = probs[bestLabel];\r\n\r\n      if (t.token.startsWith(\"##\")) {\r\n        currentToken += t.token.replace(\"##\", \"\");\r\n      } else {\r\n        // ถ้ามี token ก่อนหน้า ให้ push\r\n        if (currentToken && currentLabel !== \"O\") {\r\n          merged.push({\r\n            token: currentToken,\r\n            label: currentLabel,\r\n            confidence: currentConfidence,\r\n          });\r\n        }\r\n        // เริ่ม token ใหม่\r\n        currentToken = t.token;\r\n        currentLabel = bestLabel;\r\n        currentConfidence = bestConfidence;\r\n      }\r\n\r\n      // token สุดท้าย\r\n      if (index === tokens.length - 1) {\r\n        if (currentToken && currentLabel !== \"O\") {\r\n          merged.push({\r\n            token: currentToken,\r\n            label: currentLabel,\r\n            confidence: currentConfidence,\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    return merged;\r\n  };\r\n\r\n  const mergedTokens = mergeTokens(data);\r\n\r\n  const textWithEntities = mergedTokens.map((t, idx) => {\r\n    return `${t.token} [${t.label}] `;\r\n  }).join(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <h2>ข้อความพร้อม Entities</h2>\r\n      {/* <p>{textWithEntities}</p> */}\r\n      {mergedTokens.length > 0 && (\r\n        <div>\r\n          <h3>Entities Detected:</h3>\r\n          <ul>\r\n            {mergedTokens.map((t, idx) => (\r\n              <span key={idx} className={`entity ${t.label}`}>\r\n                {t.token} - {t.label} (Confidence: {t.confidence.toFixed(2)})\r\n              </span>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NERText;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC5B;EACA,MAAMC,WAAW,GAAIC,MAAM,IAAK;IAC9B,MAAMC,MAAM,GAAG,EAAE;IACjB,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAIC,iBAAiB,GAAG,CAAC;IAEzBJ,MAAM,CAACK,OAAO,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;MAC3B;MACA,MAAMC,KAAK,GAAGF,CAAC,CAACG,SAAS;MACzB,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACJ,KAAK,CAAC,CAACK,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAC/CP,KAAK,CAACM,CAAC,CAAC,GAAGN,KAAK,CAACO,CAAC,CAAC,GAAGD,CAAC,GAAGC,CAC5B,CAAC;MACD,MAAMC,cAAc,GAAGR,KAAK,CAACE,SAAS,CAAC;MAEvC,IAAIJ,CAAC,CAACW,KAAK,CAACC,UAAU,CAAC,IAAI,CAAC,EAAE;QAC5BhB,YAAY,IAAII,CAAC,CAACW,KAAK,CAACE,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;MAC3C,CAAC,MAAM;QACL;QACA,IAAIjB,YAAY,IAAIC,YAAY,KAAK,GAAG,EAAE;UACxCF,MAAM,CAACmB,IAAI,CAAC;YACVH,KAAK,EAAEf,YAAY;YACnBmB,KAAK,EAAElB,YAAY;YACnBmB,UAAU,EAAElB;UACd,CAAC,CAAC;QACJ;QACA;QACAF,YAAY,GAAGI,CAAC,CAACW,KAAK;QACtBd,YAAY,GAAGO,SAAS;QACxBN,iBAAiB,GAAGY,cAAc;MACpC;;MAEA;MACA,IAAIT,KAAK,KAAKP,MAAM,CAACuB,MAAM,GAAG,CAAC,EAAE;QAC/B,IAAIrB,YAAY,IAAIC,YAAY,KAAK,GAAG,EAAE;UACxCF,MAAM,CAACmB,IAAI,CAAC;YACVH,KAAK,EAAEf,YAAY;YACnBmB,KAAK,EAAElB,YAAY;YACnBmB,UAAU,EAAElB;UACd,CAAC,CAAC;QACJ;MACF;IACF,CAAC,CAAC;IAEF,OAAOH,MAAM;EACf,CAAC;EAED,MAAMuB,YAAY,GAAGzB,WAAW,CAACD,IAAI,CAAC;EAEtC,MAAM2B,gBAAgB,GAAGD,YAAY,CAACE,GAAG,CAAC,CAACpB,CAAC,EAAEqB,GAAG,KAAK;IACpD,OAAO,GAAGrB,CAAC,CAACW,KAAK,KAAKX,CAAC,CAACe,KAAK,IAAI;EACnC,CAAC,CAAC,CAACO,IAAI,CAAC,EAAE,CAAC;EAEX,oBACEhC,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAAiC,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE7BT,YAAY,CAACD,MAAM,GAAG,CAAC,iBACtB3B,OAAA;MAAAiC,QAAA,gBACEjC,OAAA;QAAAiC,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BrC,OAAA;QAAAiC,QAAA,EACGL,YAAY,CAACE,GAAG,CAAC,CAACpB,CAAC,EAAEqB,GAAG,kBACvB/B,OAAA;UAAgBsC,SAAS,EAAE,UAAU5B,CAAC,CAACe,KAAK,EAAG;UAAAQ,QAAA,GAC5CvB,CAAC,CAACW,KAAK,EAAC,KAAG,EAACX,CAAC,CAACe,KAAK,EAAC,gBAAc,EAACf,CAAC,CAACgB,UAAU,CAACa,OAAO,CAAC,CAAC,CAAC,EAAC,GAC9D;QAAA,GAFWR,GAAG;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACG,EAAA,GAxEIvC,OAAO;AA0Eb,eAAeA,OAAO;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}