{"ast":null,"code":"var _jsxFileName = \"D:\\\\Research\\\\IoTs-NER_Model\\\\NER_Model\\\\Implementation\\\\servreq-app-b\\\\ner-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport NERText from \"./NERText\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [entities, setEntities] = useState([]);\n  const [priority, setPriority] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"http://localhost:8000/ner\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text: inputText\n      })\n    });\n    const data = await response.json();\n    setEntities(data.entities);\n    setPriority(data.priority);\n  };\n  const highlightText = () => {\n    if (entities.length === 0) return inputText;\n\n    // Tokenize original text (simple split by space for demo)\n    const words = inputText.split(\" \");\n    return words.map((word, index) => {\n      const entity = entities.find(ent => ent.token === word);\n      if (entity) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `entity ${entity.label}`,\n          children: word + \" [\" + entity.label + \"] \"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this);\n      } else {\n        return word + \" \";\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Named Entity Recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"4\",\n        cols: \"50\",\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        placeholder: \"Enter text here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Analyze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Entities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [highlightText(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NERText, {\n        data: entities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qnx0S2QdA/IBJ16ZloRDlyyQxSI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","NERText","jsxDEV","_jsxDEV","App","_s","inputText","setInputText","entities","setEntities","priority","setPriority","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","text","data","json","highlightText","length","words","split","map","word","index","entity","find","ent","token","className","label","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","rows","cols","value","onChange","target","placeholder","type","_c","$RefreshReg$"],"sources":["D:/Research/IoTs-NER_Model/NER_Model/Implementation/servreq-app-b/ner-frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport NERText from \"./NERText\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [entities, setEntities] = useState([]);\n  const [priority, setPriority] = useState([]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const response = await fetch(\"http://localhost:8000/ner\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ text: inputText }),\n    });\n    const data = await response.json();\n    setEntities(data.entities);\n    setPriority(data.priority);\n  };\n\n  const highlightText = () => {\n    if (entities.length === 0) return inputText;\n\n    // Tokenize original text (simple split by space for demo)\n    const words = inputText.split(\" \");\n    return words.map((word, index) => {\n      const entity = entities.find((ent) => ent.token === word);\n      if (entity) {\n        return (\n          <span key={index} className={`entity ${entity.label}`}>\n            {word + \" [\" + entity.label + \"] \"}\n          </span>\n        );\n      } else {\n        return word + \" \";\n      }\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Named Entity Recognition</h1>\n      <form onSubmit={handleSubmit}>\n        <textarea\n          rows=\"4\"\n          cols=\"50\"\n          value={inputText}\n          onChange={(e) => setInputText(e.target.value)}\n          placeholder=\"Enter text here...\"\n        />\n        <br />\n        <button type=\"submit\">Analyze</button>\n      </form>\n      <h2>Entities</h2>\n      <div className=\"result\">\n        {highlightText()}\n        <br/>\n        <NERText data={entities} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}