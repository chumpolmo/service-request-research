{"ast":null,"code":"var _jsxFileName = \"D:\\\\Research\\\\IoTs-NER_Model\\\\NER_Model\\\\Implementation\\\\servreq-app-b\\\\ner-frontend\\\\src\\\\NERText.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NERText = ({\n  data\n}) => {\n  // ฟังก์ชันสำหรับรวม token ย่อย (##) ให้เป็นคำเดียว\n  const mergeTokens = tokens => {\n    const mergedLabel = [];\n    const merged = [];\n    let currentToken = \"\";\n    let currentLabel = \"\";\n    let currentConfidence = 0;\n    tokens.forEach((t, index) => {\n      // ดึง label ที่ confidence สูงสุดจาก all_probs\n      const highestLabel = Object.entries(t.all_probs).reduce((max, [label, prob]) => prob > max.prob ? {\n        label,\n        prob\n      } : max, {\n        label: \"\",\n        prob: 0\n      });\n\n      // ข้าม label ที่เป็น \"O\"\n      if (highestLabel.label === \"O\") return;\n      if (t.token.startsWith(\"##\")) {\n        currentToken += t.token.replace(\"##\", \"\");\n      } else {\n        alert(\"Token: \" + currentToken + \" | Label: \" + currentLabel + \" | Confidence: \" + currentConfidence);\n        if (currentToken) {\n          // push token ก่อนหน้า\n          merged.push({\n            token: currentToken,\n            label: currentLabel,\n            confidence: currentConfidence\n          });\n        }\n        // เริ่ม token ใหม่\n        currentToken = t.token;\n        currentLabel = highestLabel.label;\n        currentConfidence = highestLabel.prob;\n      }\n\n      // กรณี token สุดท้าย\n      if (index === tokens.length - 1) {\n        if (currentToken) {\n          merged.push({\n            token: currentToken,\n            label: currentLabel,\n            confidence: currentConfidence\n          });\n        }\n      }\n    });\n    return merged;\n  };\n  const mergedTokens = mergeTokens(data);\n\n  // Filter token & label ที่มี confidence score สูงสุด\n  const filteredTokens = mergedTokens.map(item => {\n    // หาค่า label ที่ confidence สูงสุดจาก all_probs\n    const highestLabel = Object.entries(item.all_probs).reduce((max, [label, prob]) => prob > max.prob ? {\n      label,\n      prob\n    } : max, {\n      label: \"\",\n      prob: 0\n    });\n    return {\n      token: item.token,\n      label: highestLabel.label,\n      confidence: highestLabel.prob\n    };\n  });\n\n  // const textWithEntities = mergedTokens.map((t, idx) => {\n  //   return `${t.token} [${t.label}] `;\n  // }).join(\"\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0E02\\u0E49\\u0E2D\\u0E04\\u0E27\\u0E32\\u0E21\\u0E1E\\u0E23\\u0E49\\u0E2D\\u0E21 Entities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), filteredTokens.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Entities Detected:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredTokens.map((t, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `entity ${t.label}`,\n          children: [t.token, \" - \", t.label, \" (Confidence: \", t.confidence.toFixed(2), \")\"]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_c = NERText;\nexport default NERText;\nvar _c;\n$RefreshReg$(_c, \"NERText\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","NERText","data","mergeTokens","tokens","mergedLabel","merged","currentToken","currentLabel","currentConfidence","forEach","t","index","highestLabel","Object","entries","all_probs","reduce","max","label","prob","token","startsWith","replace","alert","push","confidence","length","mergedTokens","filteredTokens","map","item","children","fileName","_jsxFileName","lineNumber","columnNumber","idx","className","toFixed","_c","$RefreshReg$"],"sources":["D:/Research/IoTs-NER_Model/NER_Model/Implementation/servreq-app-b/ner-frontend/src/NERText.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst NERText = ({ data }) => {\r\n    // ฟังก์ชันสำหรับรวม token ย่อย (##) ให้เป็นคำเดียว\r\n    const mergeTokens = (tokens) => {\r\n        const mergedLabel = [];\r\n        const merged = [];\r\n        let currentToken = \"\";\r\n        let currentLabel = \"\";\r\n        let currentConfidence = 0;\r\n\r\n        tokens.forEach((t, index) => {\r\n        // ดึง label ที่ confidence สูงสุดจาก all_probs\r\n        const highestLabel = Object.entries(t.all_probs).reduce(\r\n            (max, [label, prob]) => prob > max.prob ? { label, prob } : max,\r\n            { label: \"\", prob: 0 }\r\n        );\r\n\r\n        // ข้าม label ที่เป็น \"O\"\r\n        if (highestLabel.label === \"O\") return;\r\n\r\n        if (t.token.startsWith(\"##\")) {\r\n            currentToken += t.token.replace(\"##\", \"\");\r\n        } else {\r\n            alert(\"Token: \" + currentToken + \" | Label: \" + currentLabel + \" | Confidence: \" + currentConfidence);\r\n            if (currentToken) {\r\n                // push token ก่อนหน้า\r\n                merged.push({\r\n                    token: currentToken,\r\n                    label: currentLabel,\r\n                    confidence: currentConfidence,\r\n                });\r\n            }\r\n            // เริ่ม token ใหม่\r\n            currentToken = t.token;\r\n            currentLabel = highestLabel.label;\r\n            currentConfidence = highestLabel.prob;\r\n        }\r\n\r\n        // กรณี token สุดท้าย\r\n        if (index === tokens.length - 1) {\r\n            if (currentToken) {\r\n                merged.push({\r\n                    token: currentToken,\r\n                    label: currentLabel,\r\n                    confidence: currentConfidence,\r\n                });\r\n            }\r\n        }\r\n    });\r\n\r\n    return merged;\r\n};\r\n\r\nconst mergedTokens = mergeTokens(data);\r\n\r\n// Filter token & label ที่มี confidence score สูงสุด\r\nconst filteredTokens = mergedTokens.map((item) => {\r\n    // หาค่า label ที่ confidence สูงสุดจาก all_probs\r\n    const highestLabel = Object.entries(item.all_probs).reduce(\r\n      (max, [label, prob]) => prob > max.prob ? { label, prob } : max,\r\n      { label: \"\", prob: 0 }\r\n    );\r\n\r\n    return {\r\n      token: item.token,\r\n      label: highestLabel.label,\r\n      confidence: highestLabel.prob,\r\n    };\r\n});\r\n\r\n// const textWithEntities = mergedTokens.map((t, idx) => {\r\n//   return `${t.token} [${t.label}] `;\r\n// }).join(\"\");\r\n\r\nreturn (\r\n    <div>\r\n      <h2>ข้อความพร้อม Entities</h2>\r\n      {/* <p>{textWithEntities}</p> */}\r\n      {filteredTokens.length > 0 && (\r\n        <div>\r\n          <h3>Entities Detected:</h3>\r\n          <ul>\r\n            {filteredTokens.map((t, idx) => (\r\n              <span key={idx} className={`entity ${t.label}`}>\r\n                {t.token} - {t.label} (Confidence: {t.confidence.toFixed(2)})\r\n              </span>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default NERText;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}