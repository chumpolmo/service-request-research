{"ast":null,"code":"var _jsxFileName = \"D:\\\\Research\\\\IoTs-NER_Model\\\\NER_Model\\\\Implementation\\\\servreq-app-b\\\\ner-frontend\\\\src\\\\NERText.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NERText = ({\n  data\n}) => {\n  // ฟังก์ชันสำหรับรวม token ย่อย (##) ให้เป็นคำเดียว\n  const mergeTokens = tokens => {\n    const merged = [];\n    let currentToken = \"\";\n    let currentLabel = \"\";\n    let currentConfidence = 0;\n    tokens.forEach((t, index) => {\n      if (t.token.startsWith(\"##\")) {\n        currentToken += t.token.replace(\"##\", \"\");\n      } else {\n        if (currentToken) {\n          // push token ก่อนหน้า\n          if (currentLabel !== \"O\") {\n            merged.push({\n              token: currentToken,\n              label: currentLabel,\n              confidence: currentConfidence\n            });\n          }\n        }\n        // เริ่ม token ใหม่\n        currentToken = t.token;\n        currentLabel = t.label;\n        currentConfidence = t.confidence;\n      }\n\n      // กรณีเป็น token สุดท้าย\n      if (index === tokens.length - 1) {\n        if (currentToken && currentLabel !== \"O\") {\n          merged.push({\n            token: currentToken,\n            label: currentLabel,\n            confidence: currentConfidence\n          });\n        }\n      }\n    });\n    return merged;\n  };\n\n  // ใช้ฟังก์ชัน mergeTokens\n  const mergedTokens = mergeTokens(data);\n\n  // สร้างข้อความตามที่ต้องการ\n  const textWithEntities = mergedTokens.map((t, idx) => {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `entity ${t.label}`,\n      children: [\"`$\", t.token, \" [$\", t.label, \"] `\"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 14\n    }, this);\n  }).join(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0E02\\u0E49\\u0E2D\\u0E04\\u0E27\\u0E32\\u0E21\\u0E1E\\u0E23\\u0E49\\u0E2D\\u0E21 Entities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: textWithEntities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c = NERText;\nexport default NERText;\nvar _c;\n$RefreshReg$(_c, \"NERText\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","NERText","data","mergeTokens","tokens","merged","currentToken","currentLabel","currentConfidence","forEach","t","index","token","startsWith","replace","push","label","confidence","length","mergedTokens","textWithEntities","map","idx","className","children","fileName","_jsxFileName","lineNumber","columnNumber","join","_c","$RefreshReg$"],"sources":["D:/Research/IoTs-NER_Model/NER_Model/Implementation/servreq-app-b/ner-frontend/src/NERText.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst NERText = ({ data }) => {\r\n  // ฟังก์ชันสำหรับรวม token ย่อย (##) ให้เป็นคำเดียว\r\n  const mergeTokens = (tokens) => {\r\n    const merged = [];\r\n    let currentToken = \"\";\r\n    let currentLabel = \"\";\r\n    let currentConfidence = 0;\r\n\r\n    tokens.forEach((t, index) => {\r\n      if (t.token.startsWith(\"##\")) {\r\n        currentToken += t.token.replace(\"##\", \"\");\r\n      } else {\r\n        if (currentToken) {\r\n          // push token ก่อนหน้า\r\n          if (currentLabel !== \"O\") {\r\n            merged.push({\r\n              token: currentToken,\r\n              label: currentLabel,\r\n              confidence: currentConfidence,\r\n            });\r\n          }\r\n        }\r\n        // เริ่ม token ใหม่\r\n        currentToken = t.token;\r\n        currentLabel = t.label;\r\n        currentConfidence = t.confidence;\r\n      }\r\n\r\n      // กรณีเป็น token สุดท้าย\r\n      if (index === tokens.length - 1) {\r\n        if (currentToken && currentLabel !== \"O\") {\r\n          merged.push({\r\n            token: currentToken,\r\n            label: currentLabel,\r\n            confidence: currentConfidence,\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    return merged;\r\n  };\r\n\r\n  // ใช้ฟังก์ชัน mergeTokens\r\n  const mergedTokens = mergeTokens(data);\r\n\r\n  // สร้างข้อความตามที่ต้องการ\r\n  const textWithEntities = mergedTokens.map((t, idx) => {\r\n      return <span key={index} className={`entity ${t.label}`}>`${t.token} [${t.label}] `</span>;\r\n  }).join(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <h2>ข้อความพร้อม Entities</h2>\r\n      <p>{textWithEntities}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NERText;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC5B;EACA,MAAMC,WAAW,GAAIC,MAAM,IAAK;IAC9B,MAAMC,MAAM,GAAG,EAAE;IACjB,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAIC,iBAAiB,GAAG,CAAC;IAEzBJ,MAAM,CAACK,OAAO,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;MAC3B,IAAID,CAAC,CAACE,KAAK,CAACC,UAAU,CAAC,IAAI,CAAC,EAAE;QAC5BP,YAAY,IAAII,CAAC,CAACE,KAAK,CAACE,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;MAC3C,CAAC,MAAM;QACL,IAAIR,YAAY,EAAE;UAChB;UACA,IAAIC,YAAY,KAAK,GAAG,EAAE;YACxBF,MAAM,CAACU,IAAI,CAAC;cACVH,KAAK,EAAEN,YAAY;cACnBU,KAAK,EAAET,YAAY;cACnBU,UAAU,EAAET;YACd,CAAC,CAAC;UACJ;QACF;QACA;QACAF,YAAY,GAAGI,CAAC,CAACE,KAAK;QACtBL,YAAY,GAAGG,CAAC,CAACM,KAAK;QACtBR,iBAAiB,GAAGE,CAAC,CAACO,UAAU;MAClC;;MAEA;MACA,IAAIN,KAAK,KAAKP,MAAM,CAACc,MAAM,GAAG,CAAC,EAAE;QAC/B,IAAIZ,YAAY,IAAIC,YAAY,KAAK,GAAG,EAAE;UACxCF,MAAM,CAACU,IAAI,CAAC;YACVH,KAAK,EAAEN,YAAY;YACnBU,KAAK,EAAET,YAAY;YACnBU,UAAU,EAAET;UACd,CAAC,CAAC;QACJ;MACF;IACF,CAAC,CAAC;IAEF,OAAOH,MAAM;EACf,CAAC;;EAED;EACA,MAAMc,YAAY,GAAGhB,WAAW,CAACD,IAAI,CAAC;;EAEtC;EACA,MAAMkB,gBAAgB,GAAGD,YAAY,CAACE,GAAG,CAAC,CAACX,CAAC,EAAEY,GAAG,KAAK;IAClD,oBAAOtB,OAAA;MAAkBuB,SAAS,EAAE,UAAUb,CAAC,CAACM,KAAK,EAAG;MAAAQ,QAAA,GAAC,IAAE,EAACd,CAAC,CAACE,KAAK,EAAC,KAAG,EAACF,CAAC,CAACM,KAAK,EAAC,KAAG;IAAA,GAAjEL,KAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkE,CAAC;EAC9F,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;EAEX,oBACE7B,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9B5B,OAAA;MAAAwB,QAAA,EAAIJ;IAAgB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV,CAAC;AAACE,EAAA,GAzDI7B,OAAO;AA2Db,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}